set.seed(2077)
N <- nrow(chicago)
B <- 100
bootOUT <- matrix(NA, nrow = B, ncol = 3)
colnames(bootOUT) <- c("Poly", "MARS", "GAMS")
for(b in 1:B) {
boot_rows <- sample(1:N, size = N, replace = TRUE)
boot_train <- chicago[boot_rows, ]
boot_OOB <- chicago[-unique(boot_rows), ]
fit_poly <- lm(ln_death ~ poly(linear_pm25, 3) + poly(linear_pm10, 3) + poly(o3median, 3) + poly(tmpd, 3) + poly(day_scale, 3), data = boot_train)
fit_mars <- earth(ln_death ~ linear_pm25 + linear_pm10 + o3median + tmpd + day_scale, data = boot_train,
pmethod = "cv", nfold = 10)
fit_gam <- gam(ln_death ~ s(linear_pm25) + s(linear_pm10) + s(o3median) + s(tmpd) + s(day_scale), data = boot_train)
bootOUT[b, 1] <- mean((boot_OOB$ln_death - predict(fit_poly, newdata = boot_OOB))^2)
bootOUT[b, 2] <- mean((boot_OOB$ln_death - predict(fit_mars, newdata = boot_OOB))^2)
bootOUT[b, 3] <- mean((boot_OOB$ln_death - predict(fit_gam, newdata = boot_OOB))^2)
}
apply(bootOUT, 2, summary)
apply(bootOUT, 2, sd)
mse_lasso_cv_min <- min(fit_lasso_cv$cvm)
mse_ridge_cv_min <- min(fit_ridge_cv$cvm)
mse_EN_cv_min <- min(fit_EN_cv$cvm)
mse_glm_mean <- mean(cvOUT)
mse_glm_mean <- mean(cvOUT)
mse_glm_min <- min(cvOUT)
mse_glm <- mean(cvOUT)
mse_summary <- data.frame(
Model = c("GLM", "LASSO", "RIDGE", "EN"),
MSE_mean = c(mse_glm, mse_lasso_cv, mse_ridge_cv, mse_EN_cv),
MSE_min = c(mse_glm_min, mse_lasso_cv_min, mse_ridge_cv_min, mse_EN_cv_min)
)
kable_table_2 <- kable(mse_summary, format = "html", caption = "MSE Values for Different Models")
print(kable_table_2)
mse_lasso_cv_sd <- sd(fit_lasso_cv$cvm)
mse_ridge_cv_sd <- sd(fit_ridge_cv$cvm)
mse_EN_cv_sd <- sd(fit_EN_cv$cvm)
mse_glm_sd <- sd(cvOUT)
mse_summary <- data.frame(
Model = c("GLM", "LASSO", "RIDGE", "EN"),
MSE_mean = c(mse_glm, mse_lasso_cv, mse_ridge_cv, mse_EN_cv),
MSE_min = c(mse_glm_min, mse_lasso_cv_min, mse_ridge_cv_min, mse_EN_cv_min),
MSE_sd = c(mse_glm_sd, mse_lasso_cv_sd, mse_ridge_cv_sd, mse_EN_cv_sd)
)
kable_table_2 <- kable(mse_summary, format = "html", caption = "MSE Values for Different Models")
print(kable_table_2)
apply(coef_df, 2, function(x) sum(x != 0))
library(tidyverse)
library(gridExtra)
knitr::opts_chunk$set(
comment = 'By Stephy G', fig.width = 15, fig.height = 10)
getwd()
library(randomForest)
install.packages("randomForest")
library(randomForest)
dummy_df <- read.csv("HW2_dataset")
dummy_df <- read.csv("HW2_dataset")
dummy_df <- read.csv("HW2_dataset.csv")
View(dummy_df)
dummy_rf <- dummy_df %>%
mutate(y = as.numeric(y)) %>%
randomForest(y ~ .,
mtry = 125,
nodesize = 2)
dummy_rf <- dummy_df %>%
mutate(Y = as.numeric(y)) %>%
randomForest(Y ~ .,
mtry = 125,
nodesize = 2)
library(tidyverse)
library(gridExtra)
library(randomForest)
knitr::opts_chunk$set(
comment = 'By Stephy G', fig.width = 15, fig.height = 10)
dummy_df <- read.csv("HW2_dataset.csv")
dummy_rf <- dummy_df %>%
mutate(Y = as.numeric(y)) %>%
randomForest(Y ~ .,
mtry = 125,
nodesize = 2)
dummy_df <- read.csv("HW2_dataset.csv")
dummy_rf <- dummy_df %>%
mutate(Y = as.numeric(Y)) %>%
randomForest(Y ~ .,
mtry = 125,
nodesize = 2)
dummy_rf <- dummy_df %>%
mutate(Y = as.numeric(Y))
randomForest(Y , .,
mtry = 125,
nodesize = 2)
dummy_rf <- dummy_df %>%
mutate(Y = as.numeric(Y)) %>%
randomForest(Y , .,
mtry = 125,
nodesize = 2)
dummy_rf <- dummy_df %>%
mutate(Y = as.numeric(Y)) %>%
randomForest(y = Y ,
x = . ,
mtry = 125,
nodesize = 2)
randomForest()?
?randomForest()
randomForest()?
help(randomForest())
randomForest()?
?randomForest()
help(randomForest())
dummy_rf <- dummy_df %>%
mutate(Y = as.numeric(Y)) %>%
randomForest(Y ~ .,
data = .,
mtry = 125,
nodesize = 2)
dummy_rf
dummy_rf <- dummy_df %>%
mutate(Y = as.numeric(Y)) %>%
randomForest(Y ~ .,
data = .,
mtry = 10,
nodesize = 2)
dummy_rf
#| echo: true
#| output-location: slide
library(tidyverse)
library(readxl) #To read excel files
setwd("M:/p/WORK/DPSS/Mini-Lecture/Pivot")
pokemon_eng <- read_xlsx("Pokemon Eng.xlsx")
#| echo: true
#| output-location: slide
pokemon_eng
pokemon_eng %>%
pivot_longer(cols = hp ,names_to = "attri",values_to = "number")
pokemon_eng %>%
pivot_longer(cols = c(hp,attack) ,names_to = "attri",values_to = "number")
pokemon_eng <- pokemon_eng %>%
pivot_longer(cols = 3:27 ,names_to = "attri",values_to = "number")
pokemon_eng
pokemon_eng <- read_xlsx("Pokemon Eng.xlsx")
pokemon_eng %>%
pivot_longer(cols = hp ,names_to = "attri",values_to = "number")
pokemon_eng %>%
pivot_longer(cols = c(hp,attack) ,names_to = "attri",values_to = "number")
pokemon_eng
pokemon_eng <- pokemon_eng %>%
pivot_longer(cols = 3:27 ,names_to = "attri",values_to = "number")
pokemon_eng
pokemon_eng
pokemon_eng %>%
pivot_wider(names_from = starts_with("attri"),values_from = number)
pokemon_wide <- pokemon_eng %>%
pivot_wider(names_from = starts_with("attri"),values_from = number)
pokemon_wide
pokemon_wide <- pokemon_wide %>%
select(name, starts_with("against")) %>%
rowwise() %>%
mutate(avg_win = mean(c_across(starts_with("against")), na.rm = TRUE)) %>%
ungroup() %>%
select(name, avg_win) %>%
arrange(desc(avg_win))
print(pokemon_wide)
?read_json()
library(tidycensus)
library(jsonlite)
library(jsonlite)
1+1
link <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year=2002"
crime <- read_json(link, simplifyVector = T)
crime <- read_json(link, simplifyVector = T)
link <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year=2002"
crime <- read_json(link, simplifyVector = T)
View(crime)
library(tidyverse)
crime %>%
group_by(primary_type) %>%
summarise(count = n())
crime %>%
group_by(primary_type) %>%
summarise(count = desc(n())
crime %>%
crime %>%
group_by(primary_type) %>%
summarise(count = n()) %>%
arrange(desc(count))
link <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year=2002"
crime <- read_json(link, simplifyVector = T)
crime %>%
group_by(primary_type) %>%
summarise(count = n()) %>%
arrange(desc(count))
model <- lm(Meter ~ micrometer_strategy  + educ + age_hh + sex_hh_female + hh_size, water_df)
## Data Exploration
library(tidyverse)
library(gridExtra)
library(sandwich)
## Data Exploration
library(tidyverse)
library(gridExtra)
library(sandwich)
setwd("M:/p/GitHub/RA/Water")
#laptop:  C:/Users/steph/Documents/GitHub/Alan_Zarchyta/RA/Water
#desktop: M:/p/GitHub/RA/Water
water_df <- read.csv("water_df_encoded.csv")
##In individual certain house
water_df <- water_df %>%
filter(!is.na(micrometer_strategy))
## Make the household size variable
water_df <- water_df %>%
mutate(across(12:23, as.numeric)) %>%
filter(remitences == 1) %>%
mutate(hh_size = rowSums(select(., 12:23), na.rm = TRUE)) %>%
ggplot(aes(x= Meter)) +
geom_bar()
glimpse(water_df)
## Making Age  Variable and sex of hh
water_df <- water_df %>%
mutate(age_hh = 2019 - as.numeric(birth_year),
sex_hh_female = as.numeric(sex==1))
model <- lm(Meter ~ micrometer_strategy  + educ + age_hh + sex_hh_female + hh_size, water_df)
## Data Exploration
library(tidyverse)
library(gridExtra)
library(sandwich)
## Data Exploration
library(tidyverse)
library(gridExtra)
library(sandwich)
setwd("M:/p/GitHub/RA/Water")
#laptop:  C:/Users/steph/Documents/GitHub/Alan_Zarchyta/RA/Water
#desktop: M:/p/GitHub/RA/Water
water_df <- read.csv("water_df_encoded.csv")
##In individual certain house
water_df <- water_df %>%
filter(!is.na(micrometer_strategy))
## Make the household size variable
water_df <- water_df %>%
mutate(across(12:23, as.numeric)) %>%
filter(remitences == 1) %>%
mutate(hh_size = rowSums(select(., 12:23), na.rm = TRUE)) %>%
ggplot(aes(x= Meter)) +
geom_bar()
glimpse(water_df)
## Making Age  Variable and sex of hh
water_df <- water_df %>%
mutate(age_hh = 2019 - as.numeric(birth_year),
sex_hh_female = as.numeric(sex==1))
View(water_df)
setwd("M:/p/GitHub/RA/Water")
water_df <- read.csv("water_df_encoded.csv")
water_df <- water_df %>%
filter(!is.na(micrometer_strategy))
water_df <- water_df %>%
mutate(across(12:23, as.numeric)) %>%
filter(remitences == 1) %>%
mutate(hh_size = rowSums(select(., 12:23), na.rm = TRUE))
water_df <- water_df %>%
mutate(age_hh = 2019 - as.numeric(birth_year),
sex_hh_female = as.numeric(sex==1))
dist <- c("Meter", "Type", "Com_1","Com_2")
graph_dist <- list()
## Distribution by type ##
for (i in dist) {
graph <- water_df %>%
ggplot(aes_string(x = i)) +
geom_bar()
graph_dist[[i]] <- graph
}
do.call(grid.arrange, c(graph_dist, ncol = 2))
## Variables##
## Explanatory
water_df %>%
filter(micrometer_strategy < 10) %>%
ggplot(aes(x=micrometer_strategy)) +
geom_bar()+
facet_wrap(~ Meter)
water_df %>%
filter(Com_3 == "Pablo Hernadez") %>%
view()
water_df %>%
filter(!micrometer_strategy == 98) %>%
ggplot(aes(x=micrometer_strategy)) +
geom_bar()+
facet_wrap(~ Meter)
water_df %>%
filter(education_strategy < 10) %>%
ggplot(aes(x=education_strategy)) +
geom_bar()+
facet_wrap(~ Meter)
water_df %>%
filter(education_strategy == 98) %>%
ggplot(aes(x=education_strategy)) +
geom_bar()+
facet_wrap(~ Meter)
water_df %>%
filter(educ < 98) %>%
ggplot(aes(x = educ, y = hh_size, color = as.factor(Meter))) +
geom_jitter()+
theme_classic()
model <- lm(Meter ~ micrometer_strategy  + educ + age_hh + sex_hh_female + hh_size, water_df)
## AGE,SEX, EDUC of the head, hhsize
summary(model)
table <- summary(model)
library(stargazer)
library(kableExtra)
kable(table)
table %>%
kable()
table
table$coefficients %>%
kable()
table$coefficients %>%
stargazer()
table$coefficients %>%
kable()
table$coefficients %>%
stargazer(type = httml)
table$coefficients %>%
kable()
table$coefficients %>%
stargazer(type = html)
table$coefficients %>%
kable()
table$coefficients %>%
stargazer(type = HTML)
table$coefficients %>%
kable()
data(mtcars)
model <- lm(mpg ~ wt + hp, data = mtcars)
# Generate the HTML output for the model's coefficients
html_output <- stargazer(model, type = "html")
# Print the HTML output
cat(html_output)
data(mtcars)
model <- lm(mpg ~ wt + hp, data = mtcars)
# Generate the HTML output for the model's coefficients
html_output <- stargazer(model)
model$coefficients %>%
kable()
# Print the HTML output
cat(html_output)
data(mtcars)
model <- lm(mpg ~ wt + hp, data = mtcars)
# Generate the HTML output for the model's coefficients
html_output <- stargazer(model)
model$coefficients %>%
kable()
# Print the HTML output
cat(html_output)
library(tidyverse)
library(kableExtra)
library(stargazer)
data(mtcars)
model <- lm(mpg ~ wt + hp, data = mtcars)
# Generate the HTML output for the model's coefficients
html_output <- stargazer(model)
model$coefficients %>%
kable()
# Print the HTML output
cat(html_output)
stargazer(model)
library(tidyverse)
library(kableExtra)
library(stargazer)
data(mtcars)
model <- lm(mpg ~ wt + hp, data = mtcars)
# Generate the HTML output for the model's coefficients
html_output <- stargazer(model)
model$coefficients %>%
kable()
# Print the HTML output
cat(html_output)
library(tidyverse)
library(kableExtra)
library(stargazer)
data(mtcars)
model <- lm(mpg ~ wt + hp, data = mtcars)
# Generate the HTML output for the model's coefficients
html_output <- stargazer(model, type = "html")
model$coefficients %>%
kable()
# Print the HTML output
cat(html_output)
model$coefficients %>%
kable()
model$coefficients %>%
kable() %>%
view()
# Create the table
table_html <- model$coefficients %>%
kable() %>%
kable_styling()
# Save the table as HTML
html_file <- "model_coefficients.html"
save_kable(table_html, html_file)
html_file
library(webshot)
# Convert the HTML table to an image
img_file <- "model_coefficients.png"
webshot(html_file, img_file)
# Optional: display the image in RStudio viewer
img_file
webshot::install_phantomjs()
table <- summary(model)
# Create the table
table_html <- model$coefficients %>%
kable() %>%
kable_styling()
# Save the table as HTML
html_file <- "model_coefficients.html"
save_kable(table_html, html_file)
# Convert the HTML table to an image
img_file <- "model_coefficients.png"
webshot(html_file, img_file)
# Optional: display the image in RStudio viewer
img_file
img_file
library(tidyverse)
library(gridExtra)
library(ggthemes)
setwd("M:/p/Personal/Health")
labels <- read.csv("Household Data Labeled.csv")
raw <- read.csv("Household Data Raw.csv")
imap_dfc()
View(raw)
raw %>%
filter(is.na(country_origin)) %>%
view()
raw <- raw %>%
filter(is.na(country_origin),
consent == 1)
raw <- read.csv("Household Data Raw.csv")
raw <- raw %>%
filter(is.na(country_origin)&
consent == 1)
raw <- read.csv("Household Data Raw.csv")
us_raw <- raw %>%
filter(!is.na(country_origin)&
country_origin == "Yes")
raw <- raw %>%
filter(is.na(country_origin)&
consent == "Yes")
raw <- read.csv("Household Data Raw.csv")
raw <- raw %>%
filter(is.na(country_origin)&
consent == "Yes")
raw <- read.csv("Household Data Raw.csv")
raw <- raw %>%
filter(!is.na(country_origin)&
consent == "Yes")
us_raw <- raw %>%
filter(country_origin == 1)
View(us_raw)
dist <- c("age", "gender_birth", "gender_expression","employment","career","household_income","access_sextoys")
graph_dist <- list()
## Distribution by type ##
for (i in dist) {
graph <- us_raw %>%
ggplot(aes_string(x = i)) +
geom_bar()+
theme_few()
graph_dist[[i]] <- graph
}
do.call(grid.arrange, c(graph_dist, ncol = 2))
us_raw <- raw %>%
filter(country_origin == 1&
screening_usage == 1)
dist <- c("age", "gender_birth", "gender_expression","employment","career","household_income","access_sextoys")
graph_dist <- list()
## Distribution by type ##
for (i in dist) {
graph <- us_raw %>%
ggplot(aes_string(x = i)) +
geom_bar()+
theme_few()
graph_dist[[i]] <- graph
}
do.call(grid.arrange, c(graph_dist, ncol = 2))
graph_dist$age <- graph_dist$age +
scale_x_continuous(breaks = 1:6)
us_raw <- us_raw %>%
mutate(household_sum = rowSums(select(.,30:39),na.rm = TRUE),
household_toy = household_sum > 0,
superuser = household_sum >= 3)
graph_dist$household_income +
geom_bar(aes(color = as.factor(gender_birth)))
graph_dist$household_income +
geom_bar(aes(fill = as.factor(gender_birth)))
do.call(grid.arrange, c(graph_dist, ncol = 2))
graph_dist$household_income +
geom_bar(aes(fill = as.factor(gender_birth)))
do.call(grid.arrange, c(graph_dist, ncol = 2))
mean(us_raw$household_sum)
us_raw %>%
select(superuser) %>%
count()
us_raw %>%
select(superuser) %>%
summarise(count = count(superuser))
us_raw %>%
select(superuser) %>%
summarise(count = n(superuser))
us_raw %>%
group_by(superuser) %>%
summarise(count = n())
us_raw %>%
filter(access_sextoys == 0)
us_raw %>%
filter(access_sextoys == 0) %>%
view()
us_raw %>%
filter(access_sextoys == 0) %>%
summarise(mean = mean(household_sum))
